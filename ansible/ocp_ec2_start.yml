---
- hosts: localhost
  connection: local
  tasks:
    - name: Gather information about any instance with Name containing windows-worker
      amazon.aws.ec2_instance_info:
        profile: "{{ aws_profile }}"
        region: "{{ ec2_region }}"
        filters:
          "tag:Name": "*-windows-worker-*"
          instance-state-name: [ "stopped"]
      register: ec2_windows_worker
    - name: Gather information about any instance with Name containing master
      amazon.aws.ec2_instance_info:
        profile: "{{ aws_profile }}"
        region: "{{ ec2_region }}"
        filters:
          "tag:Name": "*-master-*"
          instance-state-name: [ "stopped"]
      register: ec2_master
    - name: Gather information about any instance with Name containing worker
      amazon.aws.ec2_instance_info:
        profile: "{{ aws_profile }}"
        region: "{{ ec2_region }}"
        filters:
          "tag:Name": "*-mb9dw-worker-*"
          instance-state-name: [ "stopped"]
      register: ec2_linux_worker
    - name: Start Master Instances
      amazon.aws.ec2_instance:
        profile: "{{ aws_profile }}"
        instance_ids: "{{ item.instance_id }}"
        region: "{{ ec2_region }}"
        state: running
        wait: yes
      with_items: "{{ ec2_master.instances }}"
    - name: Pause for 10 minutes to let masters come on line and settle
      ansible.builtin.pause:
        minutes: 10
    - name: Start Linux Workers
      amazon.aws.ec2_instance:
        profile: "{{ aws_profile }}"
        instance_ids: "{{ item.instance_id }}"
        region: "{{ ec2_region }}"
        state: running
        wait: yes
      with_items: "{{ ec2_linux_worker.instances }}"
    - name: Start Windows Instances
      amazon.aws.ec2_instance:
        profile: "{{ aws_profile }}"
        instance_ids: "{{ item.instance_id }}"
        region: "{{ ec2_region }}"
        state: running
        wait: yes
      with_items: "{{ ec2_windows_worker.instances }}"



